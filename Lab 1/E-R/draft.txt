经过调整，目前的数据库如下所示：

## 实体

- 学生（Student），拥有属性：学号（SID，为主键），姓名（SName），性别（SGender）；
- 班级（Class），拥有属性：班号（GID，为主键），班名（GName）；
- 专业（Major），拥有属性：专业号（MID，为主键），专业名（MName）；
- 课程（Course），拥有属性：课程号（CID，为主键），课程名（CName）；
- 教师（Teacher），拥有属性：教师号（TID，为主键），教师名（TName）；
- 学期（Term），拥有属性：学期号（DID，为主键），学期名（DName）；
- 教材（Book），拥有属性：教材号（BID，为主键），教材名（BName）；
- 教室（Room），拥有属性：教师号（RID，为主键），教师名（RName）。

## 关系

- 一个专业有多个班级，一个班级只能对应一个专业；
- 一个班级有多个学生，一个学生只能对应一个班级；
- 一个专业有多个教师，一个教师只能对应一个专业；
- 一个学生可以选择多门课程，一门课程也能有多名学生；
- 一个教师只能教授一门课程，一门课程只能有一个学生；
- 一个教师可能管理一个班级（也可能不管理），一个班级一定被一个教师管理；
- 一个学期对应多门课程，一门课程只能对应一个学期；
- 一门课程对应多本教材，一本教材只能对应一个课程（也可能不对应）；
- 一个课程对应多个教室，一个教室也能对应多个课程；

此外，学生对应课程的关系具有属性课程成绩，课程对应教室的关系具有属性上课时间。除了上述提到的实体和关系的属性外没有额外属性。

## 功能

针对本系统需要实现一些功能。以下是一些示例：

### 简单的增删改查

1. 增加/修改/删除一个学生的信息；
2. 增加/修改/删除一个老师的信息；

### 复杂的查询
1. 教师查询自己负责课程的上课时间地点；
2. 教师查询自己负责班级的学生是否有课程不及格（分数不为空且低于 60）；
3. 学生查询某个学期需要的教材名称（即所有选择的课程对应的教材的并）；
4. 学生选课，提供课程 ID，需要查询该课程是否已经选过、是否会和已选课程上课时间冲突。如果没有冲突则加入选课列表。

请分析一下使用 SQL 进行上述请求是否会出现性能问题，以及较为合理的实现方式。可以使用插入、删除、连接查询、嵌套查询、分组查询、事务管理、触发器等功能。

### 页面 1 学生表

查询学生表，同时支持在这个页面里插入/删除/修改学生条目；

### 页面 2 课程表

查询课程表，同时支持在这个页面里插入/删除/修改课程条目；

### 页面 3 选课表

查询选课表，同时支持在这个页面里插入/删除/修改选课条目；

### 页面 4 功能测试

1. 给定学生 ID 和学期 ID，查询该学生需要用到的所有教材名称；
2. 给定教师 ID，查询所管理班级里每名学生成绩的平均值；
3. 给定学生 ID 和课程 ID，尝试选择这门课（需要检查时间是否冲突，如果冲突给出提醒）。

为了方便交互，给定学生、学期、教师等信息在下拉栏里展示的是名称，选中后后端使用其对应 ID 进行查询。

为了测试，查询的实现应该体现对连接查询、嵌套查询、分组查询、事务管理、触发器这些 SQL 功能的使用。如果上述功能测试无法体现某些 SQL 功能，请给出可能的示例。